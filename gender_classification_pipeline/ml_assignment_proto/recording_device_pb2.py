# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ml_assignment_proto/recording_device.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ml_assignment_proto/recording_device.proto',
  package='ml_assignment_proto',
  syntax='proto3',
  serialized_pb=_b('\n*ml_assignment_proto/recording_device.proto\x12\x13ml_assignment_proto\"\xc9\x01\n\x0fRecordingDevice\x12\x0c\n\x04make\x18\x01 \x01(\t\x12\r\n\x05model\x18\x02 \x01(\t\x12\x12\n\nhw_version\x18\x03 \x01(\t\x12H\n\rrecorder_type\x18\x04 \x01(\x0e\x32\x31.ml_assignment_proto.RecordingDevice.RecorderType\";\n\x0cRecorderType\x12\x0e\n\nMICROPHONE\x10\x00\x12\x10\n\x0cMOBILE_PHONE\x10\x01\x12\t\n\x05OTHER\x10\x02\x62\x06proto3')
)



_RECORDINGDEVICE_RECORDERTYPE = _descriptor.EnumDescriptor(
  name='RecorderType',
  full_name='ml_assignment_proto.RecordingDevice.RecorderType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MICROPHONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOBILE_PHONE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHER', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=210,
  serialized_end=269,
)
_sym_db.RegisterEnumDescriptor(_RECORDINGDEVICE_RECORDERTYPE)


_RECORDINGDEVICE = _descriptor.Descriptor(
  name='RecordingDevice',
  full_name='ml_assignment_proto.RecordingDevice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='make', full_name='ml_assignment_proto.RecordingDevice.make', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='model', full_name='ml_assignment_proto.RecordingDevice.model', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hw_version', full_name='ml_assignment_proto.RecordingDevice.hw_version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='recorder_type', full_name='ml_assignment_proto.RecordingDevice.recorder_type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _RECORDINGDEVICE_RECORDERTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=269,
)

_RECORDINGDEVICE.fields_by_name['recorder_type'].enum_type = _RECORDINGDEVICE_RECORDERTYPE
_RECORDINGDEVICE_RECORDERTYPE.containing_type = _RECORDINGDEVICE
DESCRIPTOR.message_types_by_name['RecordingDevice'] = _RECORDINGDEVICE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RecordingDevice = _reflection.GeneratedProtocolMessageType('RecordingDevice', (_message.Message,), dict(
  DESCRIPTOR = _RECORDINGDEVICE,
  __module__ = 'ml_assignment_proto.recording_device_pb2'
  # @@protoc_insertion_point(class_scope:ml_assignment_proto.RecordingDevice)
  ))
_sym_db.RegisterMessage(RecordingDevice)


# @@protoc_insertion_point(module_scope)
